t=int(input("Enter no. of test cases you want : "))
stri=[]        
for i in range(t):
    stri.append(input())
    p=0                                                 # count for '<' char
    q=0                                                 # count for '>' char                                                
    if stri[i][0]=='<':                                 # Becaue if it starts with '>' character then it's automatically wrong
        p=1
        k=1
        for  j in range(1,len(stri[i])):                
            if stri[i][j]=='<':
                p=p+1
            else:
                q=q+1
            if p<q:
                break
            else:
                new_str=stri[i][:j+1]                    # I am making a new string which is not correct but does not break any rule and contains the pattern

        if new_str.count('<')>=new_str.count('>'):
            while new_str.count('<')!=new_str.count('>'):
                new_str=new_str[:len(new_str)-1]          # I am making the perfect string which is the pattern by eliminating the extra '<' character
            print("Pattern string Prefix : ",new_str)
            print("Longest Prefix length : ",len(new_str))
        else:
            print("Longest Prefix length : ",0)
    else:
        print("Longest Prefix lenght : ",0)
            
